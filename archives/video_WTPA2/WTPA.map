Archive member included because of file (symbol)

/usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
                              /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o (exit)
/usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
                              WTPA.o (__do_copy_data)
/usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                              WTPA.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

State               0x2               WTPA.o
bankStates          0x44              globals.o
systemTicks         0x2               globals.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
LOAD WTPA.o
LOAD globals.o
LOAD eeprom.o
LOAD uart.o
LOAD softclock.o
LOAD /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/libm.a
LOAD /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a
LOAD /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/libc.a
LOAD /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xb4c
 *(.vectors)
 .vectors       0x00000000       0x7c /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000007c                . = ALIGN (0x2)
                0x0000007c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000007c        0x0 linker stubs
 *(.trampolines*)
                0x0000007c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000007c                __ctors_start = .
 *(.ctors)
                0x0000007c                __ctors_end = .
                0x0000007c                __dtors_start = .
 *(.dtors)
                0x0000007c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000007c        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
                0x0000007c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000007c        0xc /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000088       0x16 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
                0x00000088                __do_copy_data
 .init4         0x0000009e       0x10 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                0x0000009e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000ae        0x8 /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
 *(.init9)
 *(.text)
 .text          0x000000b6        0x4 /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
                0x000000b6                __vector_22
                0x000000b6                __vector_28
                0x000000b6                __vector_1
                0x000000b6                __vector_24
                0x000000b6                __bad_interrupt
                0x000000b6                __vector_6
                0x000000b6                __vector_3
                0x000000b6                __vector_23
                0x000000b6                __vector_30
                0x000000b6                __vector_25
                0x000000b6                __vector_11
                0x000000b6                __vector_17
                0x000000b6                __vector_19
                0x000000b6                __vector_7
                0x000000b6                __vector_27
                0x000000b6                __vector_5
                0x000000b6                __vector_4
                0x000000b6                __vector_2
                0x000000b6                __vector_21
                0x000000b6                __vector_15
                0x000000b6                __vector_29
                0x000000b6                __vector_8
                0x000000b6                __vector_26
                0x000000b6                __vector_14
                0x000000b6                __vector_10
                0x000000b6                __vector_16
                0x000000b6                __vector_18
                0x000000b6                __vector_20
 .text          0x000000ba      0x9ae WTPA.o
                0x000000ba                __vector_12
                0x0000019a                __vector_13
                0x00000296                __vector_9
                0x000002cc                __vector_default
                0x000002e0                HandleSoftclock
                0x000005ba                main
 .text          0x00000a68        0x0 globals.o
 .text          0x00000a68       0x38 eeprom.o
                0x00000a68                EepromWrite
                0x00000a84                EepromRead
 .text          0x00000aa0       0x50 uart.o
                0x00000aa0                Uart0GotByte
                0x00000aac                Uart0GetByte
                0x00000ab2                InitUart0
 .text          0x00000af0       0x58 softclock.o
                0x00000af0                SetTimer
                0x00000b14                CheckTimer
 .text          0x00000b48        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .text          0x00000b48        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .text          0x00000b48        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                0x00000b48                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000b48        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000b48        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000b48        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                0x00000b48                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000b48        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
                0x00000b48                exit
                0x00000b48                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000b48        0x4 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000b4c                _etext = .

.data           0x00800100        0x4 load address 0x00000b4c
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
 .data          0x00800100        0x4 WTPA.o
 .data          0x00800104        0x0 globals.o
 .data          0x00800104        0x0 eeprom.o
 .data          0x00800104        0x0 uart.o
 .data          0x00800104        0x0 softclock.o
 .data          0x00800104        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .data          0x00800104        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .data          0x00800104        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800104                . = ALIGN (0x2)
                0x00800104                _edata = .
                0x00800104                PROVIDE (__data_end, .)

.bss            0x00800104       0x74
                0x00800104                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800104        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
 .bss           0x00800104       0x1c WTPA.o
 .bss           0x00800120        0x0 globals.o
 .bss           0x00800120        0x0 eeprom.o
 .bss           0x00800120        0x0 uart.o
 .bss           0x00800120       0x10 softclock.o
 .bss           0x00800130        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .bss           0x00800130        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .bss           0x00800130        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800130        0x2 WTPA.o
                0x00800130                State
 COMMON         0x00800132       0x46 globals.o
                0x00800132                bankStates
                0x00800176                systemTicks
                0x00800178                PROVIDE (__bss_end, .)
                0x00000b4c                __data_load_start = LOADADDR (.data)
                0x00000b50                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800178        0x0
                0x00800178                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800178                PROVIDE (__noinit_end, .)
                0x00800178                _end = .
                0x00800178                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o

.stabstr        0x00000000       0x70
 *(.stabstr)
 .stabstr       0x00000000       0x70 /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x80
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 WTPA.o
 .debug_aranges
                0x00000020       0x20 eeprom.o
 .debug_aranges
                0x00000040       0x20 uart.o
 .debug_aranges
                0x00000060       0x20 softclock.o

.debug_pubnames
                0x00000000      0x14f
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x7d WTPA.o
 .debug_pubnames
                0x0000007d       0x31 globals.o
 .debug_pubnames
                0x000000ae       0x31 eeprom.o
 .debug_pubnames
                0x000000df       0x42 uart.o
 .debug_pubnames
                0x00000121       0x2e softclock.o

.debug_info     0x00000000      0xe80
 *(.debug_info)
 .debug_info    0x00000000      0x9f0 WTPA.o
 .debug_info    0x000009f0      0x1c1 globals.o
 .debug_info    0x00000bb1       0xde eeprom.o
 .debug_info    0x00000c8f       0xdf uart.o
 .debug_info    0x00000d6e      0x112 softclock.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x4dc
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x28d WTPA.o
 .debug_abbrev  0x0000028d       0x86 globals.o
 .debug_abbrev  0x00000313       0x94 eeprom.o
 .debug_abbrev  0x000003a7       0x7b uart.o
 .debug_abbrev  0x00000422       0xba softclock.o

.debug_line     0x00000000      0xe98
 *(.debug_line)
 .debug_line    0x00000000      0xbdf WTPA.o
 .debug_line    0x00000bdf       0x65 globals.o
 .debug_line    0x00000c44       0xf2 eeprom.o
 .debug_line    0x00000d36       0xd0 uart.o
 .debug_line    0x00000e06       0x92 softclock.o

.debug_frame    0x00000000      0x180
 *(.debug_frame)
 .debug_frame   0x00000000       0xe0 WTPA.o
 .debug_frame   0x000000e0       0x30 eeprom.o
 .debug_frame   0x00000110       0x40 uart.o
 .debug_frame   0x00000150       0x30 softclock.o

.debug_str      0x00000000      0x6b1
 *(.debug_str)
 .debug_str     0x00000000      0x5fe WTPA.o
                                0x63d (size before relaxing)
 .debug_str     0x000005fe        0xa globals.o
                                0x1df (size before relaxing)
 .debug_str     0x00000608       0x33 eeprom.o
                                 0xd6 (size before relaxing)
 .debug_str     0x0000063b       0x2b uart.o
                                 0xce (size before relaxing)
 .debug_str     0x00000666       0x4b softclock.o
                                 0xf5 (size before relaxing)

.debug_loc      0x00000000      0x184
 *(.debug_loc)
 .debug_loc     0x00000000      0x105 WTPA.o
 .debug_loc     0x00000105       0x59 eeprom.o
 .debug_loc     0x0000015e       0x26 softclock.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(WTPA.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0x58
 .debug_ranges  0x00000000       0x58 WTPA.o

Cross Reference Table

Symbol                                            File
CheckTimer                                        softclock.o
                                                  WTPA.o
EepromRead                                        eeprom.o
EepromWrite                                       eeprom.o
HandleSoftclock                                   WTPA.o
InitUart0                                         uart.o
                                                  WTPA.o
SetTimer                                          softclock.o
                                                  WTPA.o
State                                             WTPA.o
Uart0GetByte                                      uart.o
Uart0GotByte                                      uart.o
__bad_interrupt                                   /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__bss_end                                         /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
__data_end                                        /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
__data_start                                      /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                                                  softclock.o
                                                  globals.o
                                                  WTPA.o
__do_copy_data                                    /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
                                                  WTPA.o
__heap_end                                        /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__init                                            /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__stack                                           /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_1                                        /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_10                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_11                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_12                                       WTPA.o
                                                  /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_13                                       WTPA.o
                                                  /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_14                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_15                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_16                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_17                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_18                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_19                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_2                                        /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_20                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_21                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_22                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_23                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_24                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_25                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_26                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_27                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_28                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_29                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_3                                        /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_30                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_4                                        /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_5                                        /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_6                                        /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_7                                        /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_8                                        /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_9                                        WTPA.o
                                                  /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_default                                  WTPA.o
                                                  /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vectors                                         /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
_exit                                             /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
bankStates                                        globals.o
                                                  WTPA.o
exit                                              /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
                                                  /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
main                                              WTPA.o
                                                  /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
systemTicks                                       softclock.o
                                                  globals.o
                                                  WTPA.o
