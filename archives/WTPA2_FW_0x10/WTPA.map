Archive member included because of file (symbol)

/usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_mulsi3.o)
                              WTPA.o (__mulsi3)
/usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodqi4.o)
                              WTPA.o (__udivmodqi4)
/usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_divmodhi4.o)
                              WTPA.o (__divmodhi4)
/usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodsi4.o)
                              WTPA.o (__udivmodsi4)
/usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
                              /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o (exit)
/usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
                              WTPA.o (__do_copy_data)
/usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                              WTPA.o (__do_clear_bss)
/usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodhi4.o)
                              /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_divmodhi4.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

UpdateOutput        0x2               WTPA.o
midiChannelNumberA  0x1               midi.o
State               0x2               WTPA.o
midiMessageIncomingFifo
                    0x18              midi.o
bankStates          0x44              globals.o
systemTicks         0x2               globals.o
midiChannelNumberB  0x1               midi.o
midiMessageOutgoingFifo
                    0x18              midi.o
midiMessagesInIncomingFifo
                    0x1               midi.o
midiMessagesInOutgoingFifo
                    0x1               midi.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
LOAD WTPA.o
LOAD globals.o
LOAD eeprom.o
LOAD uart.o
LOAD softclock.o
LOAD midi.o
LOAD microSD.o
LOAD /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/libm.a
LOAD /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a
LOAD /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/libc.a
LOAD /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x4ef4
 *(.vectors)
 .vectors       0x00000000       0x7c /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x0000007c       0x38 WTPA.o
 *(.progmem*)
                0x000000b4                . = ALIGN (0x2)
                0x000000b4                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000b4        0x0 linker stubs
 *(.trampolines*)
                0x000000b4                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000b4                __ctors_start = .
 *(.ctors)
                0x000000b4                __ctors_end = .
                0x000000b4                __dtors_start = .
 *(.dtors)
                0x000000b4                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000b4        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
                0x000000b4                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000b4        0xc /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000c0       0x16 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
                0x000000c0                __do_copy_data
 .init4         0x000000d6       0x10 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                0x000000d6                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000e6        0x8 /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
 *(.init9)
 *(.text)
 .text          0x000000ee        0x4 /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
                0x000000ee                __vector_22
                0x000000ee                __vector_28
                0x000000ee                __vector_1
                0x000000ee                __vector_24
                0x000000ee                __bad_interrupt
                0x000000ee                __vector_3
                0x000000ee                __vector_23
                0x000000ee                __vector_30
                0x000000ee                __vector_25
                0x000000ee                __vector_11
                0x000000ee                __vector_17
                0x000000ee                __vector_19
                0x000000ee                __vector_7
                0x000000ee                __vector_27
                0x000000ee                __vector_5
                0x000000ee                __vector_4
                0x000000ee                __vector_2
                0x000000ee                __vector_21
                0x000000ee                __vector_15
                0x000000ee                __vector_29
                0x000000ee                __vector_8
                0x000000ee                __vector_26
                0x000000ee                __vector_10
                0x000000ee                __vector_16
                0x000000ee                __vector_18
                0x000000ee                __vector_20
 .text          0x000000f2     0x42bc WTPA.o
                0x00001210                __vector_12
                0x0000129e                __vector_6
                0x0000132e                __vector_13
                0x00001460                __vector_14
                0x00001592                __vector_9
                0x000015c8                __vector_default
                0x000015dc                HandleSoftclock
                0x000028e0                main
 .text          0x000043ae        0x0 globals.o
 .text          0x000043ae       0x38 eeprom.o
                0x000043ae                EepromWrite
                0x000043ca                EepromRead
 .text          0x000043e6       0x50 uart.o
                0x000043e6                Uart0GotByte
                0x000043f2                Uart0GetByte
                0x000043f8                InitUart0
 .text          0x00004436       0x58 softclock.o
                0x00004436                SetTimer
                0x0000445a                CheckTimer
 .text          0x0000448e      0x440 midi.o
                0x0000448e                GetMidiMessageFromIncomingFifo
                0x00004542                PutMidiMessageInOutgoingFifo
                0x0000458e                InitMidi
                0x000045b2                HandleIncomingMidiByte
                0x0000475c                MidiTxBufferNotEmpty
                0x00004772                PopOutgoingMidiByte
 .text          0x000048ce      0x53a microSD.o
                0x000048ce                UnInitSdInterface
                0x000048ea                InitSdInterface
                0x00004918                EndSdTransfer
                0x0000491c                StartSdTransfer
                0x00004922                TransferSdByte
                0x0000496c                SendSdCommand
                0x00004b96                SdBeginSingleBlockRead
                0x00004bba                SdBeginSingleBlockWrite
                0x00004bde                SdHandshake
 .text          0x00004e08        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_mulsi3.o)
 .text          0x00004e08        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodqi4.o)
 .text          0x00004e08        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_divmodhi4.o)
 .text          0x00004e08        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodsi4.o)
 .text          0x00004e08        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .text          0x00004e08        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .text          0x00004e08        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 .text          0x00004e08        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodhi4.o)
                0x00004e08                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00004e08       0x3e /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_mulsi3.o)
                0x00004e08                __mulsi3
 .text.libgcc   0x00004e46       0x18 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodqi4.o)
                0x00004e46                __udivmodqi4
 .text.libgcc   0x00004e5e       0x26 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_divmodhi4.o)
                0x00004e5e                __divmodhi4
                0x00004e5e                _div
 .text.libgcc   0x00004e84       0x44 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodsi4.o)
                0x00004e84                __udivmodsi4
 .text.libgcc   0x00004ec8        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00004ec8        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00004ec8        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00004ec8       0x28 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodhi4.o)
                0x00004ec8                __udivmodhi4
                0x00004ef0                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00004ef0        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
                0x00004ef0                exit
                0x00004ef0                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00004ef0        0x4 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00004ef4                _etext = .

.data           0x00800100       0x1e load address 0x00004ef4
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
 .data          0x00800100       0x1e WTPA.o
 .data          0x0080011e        0x0 globals.o
 .data          0x0080011e        0x0 eeprom.o
 .data          0x0080011e        0x0 uart.o
 .data          0x0080011e        0x0 softclock.o
 .data          0x0080011e        0x0 midi.o
 .data          0x0080011e        0x0 microSD.o
 .data          0x0080011e        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_mulsi3.o)
 .data          0x0080011e        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodqi4.o)
 .data          0x0080011e        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_divmodhi4.o)
 .data          0x0080011e        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodsi4.o)
 .data          0x0080011e        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .data          0x0080011e        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .data          0x0080011e        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 .data          0x0080011e        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080011e                . = ALIGN (0x2)
                0x0080011e                _edata = .
                0x0080011e                PROVIDE (__data_end, .)

.bss            0x0080011e      0x225
                0x0080011e                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080011e        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
 .bss           0x0080011e      0x18a WTPA.o
 .bss           0x008002a8        0x0 globals.o
 .bss           0x008002a8        0x0 eeprom.o
 .bss           0x008002a8        0x0 uart.o
 .bss           0x008002a8       0x10 softclock.o
 .bss           0x008002b8        0xd midi.o
 .bss           0x008002c5        0x0 microSD.o
 .bss           0x008002c5        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_mulsi3.o)
 .bss           0x008002c5        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodqi4.o)
 .bss           0x008002c5        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_divmodhi4.o)
 .bss           0x008002c5        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodsi4.o)
 .bss           0x008002c5        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .bss           0x008002c5        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .bss           0x008002c5        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 .bss           0x008002c5        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x008002c5        0x4 WTPA.o
                0x008002c5                UpdateOutput
                0x008002c7                State
 COMMON         0x008002c9       0x46 globals.o
                0x008002c9                bankStates
                0x0080030d                systemTicks
 COMMON         0x0080030f       0x34 midi.o
                0x0080030f                midiChannelNumberA
                0x00800310                midiMessageIncomingFifo
                0x00800328                midiChannelNumberB
                0x00800329                midiMessageOutgoingFifo
                0x00800341                midiMessagesInIncomingFifo
                0x00800342                midiMessagesInOutgoingFifo
                0x00800343                PROVIDE (__bss_end, .)
                0x00004ef4                __data_load_start = LOADADDR (.data)
                0x00004f12                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800343        0x0
                0x00800343                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800343                PROVIDE (__noinit_end, .)
                0x00800343                _end = .
                0x00800343                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o

.stabstr        0x00000000       0x70
 *(.stabstr)
 .stabstr       0x00000000       0x70 /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0xc0
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 WTPA.o
 .debug_aranges
                0x00000020       0x20 eeprom.o
 .debug_aranges
                0x00000040       0x20 uart.o
 .debug_aranges
                0x00000060       0x20 softclock.o
 .debug_aranges
                0x00000080       0x20 midi.o
 .debug_aranges
                0x000000a0       0x20 microSD.o

.debug_pubnames
                0x00000000      0x3a0
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0xad WTPA.o
 .debug_pubnames
                0x000000ad       0x31 globals.o
 .debug_pubnames
                0x000000de       0x31 eeprom.o
 .debug_pubnames
                0x0000010f       0x42 uart.o
 .debug_pubnames
                0x00000151       0x2e softclock.o
 .debug_pubnames
                0x0000017f      0x153 midi.o
 .debug_pubnames
                0x000002d2       0xce microSD.o

.debug_info     0x00000000     0x26b9
 *(.debug_info)
 .debug_info    0x00000000     0x182a WTPA.o
 .debug_info    0x0000182a      0x1c1 globals.o
 .debug_info    0x000019eb       0xde eeprom.o
 .debug_info    0x00001ac9       0xdf uart.o
 .debug_info    0x00001ba8      0x112 softclock.o
 .debug_info    0x00001cba      0x458 midi.o
 .debug_info    0x00002112      0x5a7 microSD.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x8b4
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x2d3 WTPA.o
 .debug_abbrev  0x000002d3       0x86 globals.o
 .debug_abbrev  0x00000359       0x94 eeprom.o
 .debug_abbrev  0x000003ed       0x7b uart.o
 .debug_abbrev  0x00000468       0xba softclock.o
 .debug_abbrev  0x00000522      0x199 midi.o
 .debug_abbrev  0x000006bb      0x1f9 microSD.o

.debug_line     0x00000000     0x3545
 *(.debug_line)
 .debug_line    0x00000000     0x264d WTPA.o
 .debug_line    0x0000264d       0x65 globals.o
 .debug_line    0x000026b2       0xf2 eeprom.o
 .debug_line    0x000027a4       0xd0 uart.o
 .debug_line    0x00002874       0x92 softclock.o
 .debug_line    0x00002906      0x507 midi.o
 .debug_line    0x00002e0d      0x738 microSD.o

.debug_frame    0x00000000      0x3d0
 *(.debug_frame)
 .debug_frame   0x00000000      0x200 WTPA.o
 .debug_frame   0x00000200       0x30 eeprom.o
 .debug_frame   0x00000230       0x40 uart.o
 .debug_frame   0x00000270       0x30 softclock.o
 .debug_frame   0x000002a0       0x80 midi.o
 .debug_frame   0x00000320       0xb0 microSD.o

.debug_str      0x00000000     0x1190
 *(.debug_str)
 .debug_str     0x00000000      0xc82 WTPA.o
                                0xcc1 (size before relaxing)
 .debug_str     0x00000c82        0xa globals.o
                                0x1e1 (size before relaxing)
 .debug_str     0x00000c8c       0x33 eeprom.o
                                 0xd8 (size before relaxing)
 .debug_str     0x00000cbf       0x2b uart.o
                                 0xd0 (size before relaxing)
 .debug_str     0x00000cea       0x4b softclock.o
                                 0xf7 (size before relaxing)
 .debug_str     0x00000d35      0x386 midi.o
                                0x603 (size before relaxing)
 .debug_str     0x000010bb       0xd5 microSD.o
                                0x1c9 (size before relaxing)

.debug_loc      0x00000000      0xe39
 *(.debug_loc)
 .debug_loc     0x00000000      0xa0d WTPA.o
 .debug_loc     0x00000a0d       0x59 eeprom.o
 .debug_loc     0x00000a66       0x26 softclock.o
 .debug_loc     0x00000a8c      0x211 midi.o
 .debug_loc     0x00000c9d      0x19c microSD.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(WTPA.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000      0x218
 .debug_ranges  0x00000000      0x170 WTPA.o
 .debug_ranges  0x00000170       0xa8 microSD.o

Cross Reference Table

Symbol                                            File
CheckTimer                                        softclock.o
                                                  microSD.o
                                                  WTPA.o
EepromRead                                        eeprom.o
                                                  WTPA.o
EepromWrite                                       eeprom.o
                                                  WTPA.o
EndSdTransfer                                     microSD.o
                                                  WTPA.o
GetMidiMessageFromIncomingFifo                    midi.o
                                                  WTPA.o
HandleIncomingMidiByte                            midi.o
                                                  WTPA.o
HandleSoftclock                                   WTPA.o
                                                  microSD.o
InitMidi                                          midi.o
                                                  WTPA.o
InitSdInterface                                   microSD.o
                                                  WTPA.o
InitUart0                                         uart.o
                                                  WTPA.o
MidiTxBufferNotEmpty                              midi.o
                                                  WTPA.o
PopOutgoingMidiByte                               midi.o
                                                  WTPA.o
PutMidiMessageInOutgoingFifo                      midi.o
                                                  WTPA.o
SdBeginSingleBlockRead                            microSD.o
                                                  WTPA.o
SdBeginSingleBlockWrite                           microSD.o
                                                  WTPA.o
SdHandshake                                       microSD.o
                                                  WTPA.o
SendSdCommand                                     microSD.o
SetTimer                                          softclock.o
                                                  microSD.o
                                                  WTPA.o
StartSdTransfer                                   microSD.o
State                                             WTPA.o
TransferSdByte                                    microSD.o
                                                  WTPA.o
Uart0GetByte                                      uart.o
                                                  WTPA.o
Uart0GotByte                                      uart.o
                                                  WTPA.o
UnInitSdInterface                                 microSD.o
UpdateOutput                                      WTPA.o
__bad_interrupt                                   /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__bss_end                                         /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
__data_end                                        /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
__data_start                                      /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
__divmodhi4                                       /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_divmodhi4.o)
                                                  WTPA.o
__do_clear_bss                                    /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                                                  midi.o
                                                  softclock.o
                                                  globals.o
                                                  WTPA.o
__do_copy_data                                    /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
                                                  WTPA.o
__heap_end                                        /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__init                                            /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__mulsi3                                          /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_mulsi3.o)
                                                  WTPA.o
__stack                                           /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__udivmodhi4                                      /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodhi4.o)
                                                  /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_divmodhi4.o)
__udivmodqi4                                      /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodqi4.o)
                                                  WTPA.o
__udivmodsi4                                      /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodsi4.o)
                                                  WTPA.o
__vector_1                                        /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_10                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_11                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_12                                       WTPA.o
                                                  /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_13                                       WTPA.o
                                                  /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_14                                       WTPA.o
                                                  /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_15                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_16                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_17                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_18                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_19                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_2                                        /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_20                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_21                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_22                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_23                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_24                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_25                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_26                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_27                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_28                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_29                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_3                                        /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_30                                       /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_4                                        /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_5                                        /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_6                                        WTPA.o
                                                  /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_7                                        /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_8                                        /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_9                                        WTPA.o
                                                  /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vector_default                                  WTPA.o
                                                  /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
__vectors                                         /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
_div                                              /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_divmodhi4.o)
_exit                                             /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
bankStates                                        globals.o
                                                  WTPA.o
exit                                              /usr/local/avr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
                                                  /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
main                                              WTPA.o
                                                  /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm644p.o
midiChannelNumberA                                midi.o
                                                  WTPA.o
midiChannelNumberB                                midi.o
                                                  WTPA.o
midiMessageIncomingFifo                           midi.o
midiMessageOutgoingFifo                           midi.o
midiMessagesInIncomingFifo                        midi.o
                                                  WTPA.o
midiMessagesInOutgoingFifo                        midi.o
systemTicks                                       softclock.o
                                                  globals.o
                                                  WTPA.o
